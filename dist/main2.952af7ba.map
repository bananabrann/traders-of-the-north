{"version":3,"sources":["../js/main2.js"],"names":["bag","pot","arena","userButton","ulf","draw","document","getElementById","addEventListener","drawCard","bet","console","log","decline","rune","r2","placeRune","r5","r6","r9","sigrid","r3","r4","r7","r8","vikingStockpile","gold","fish","badgold","badfish","viking","length","push","Math","floor","random","slice","pop","splice","i","checkBet"],"mappings":"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","file":"main2.952af7ba.map","sourceRoot":"../src/html","sourcesContent":["// const bag = [{\"gold\": 1}, {\"fish\": 1}, {\"fish\": 1}, {\"fish\": 1}, {\"badgold\": 1}, {\"badfish\": 1}, {\"badfish\": 1} ];\nconst bag = [\"gold\", \"gold\", \"fish\", \"fish\", \"fish\", \"badgold\", \"badfish\"];\n// *Repeats are not nessesary for randomizer, but repeats are here for tile ratios\n// Think about which one to use, for score calculation.\n\nlet pot =[];\n\nlet arena =[];\n\n// console.log(bag);\n\nuserButton = {\n    // Don't use an integer for the rune object keys, it won't work.\n    ulf: {\n        draw: document.getElementById(\"ulf-button-draw\").addEventListener(\"click\", function() {drawCard(\"Ulf\")} ),\n        bet: document.getElementById(\"ulf-button-bet\").addEventListener(\"click\", function() { console.log(\"Ulf bet clicked!\")}),\n        decline: document.getElementById(\"ulf-button-decline\").addEventListener(\"click\", function() { console.log(\"Ulf decline clicked!\")}),\n        rune: {\n            r2: document.getElementById(\"ulf-rune2\").addEventListener(\"click\", function() { placeRune(2, \"ulf\")}),\n            r5: document.getElementById(\"ulf-rune5\").addEventListener(\"click\", function() { placeRune(5, \"ulf\")}),\n            r6: document.getElementById(\"ulf-rune6\").addEventListener(\"click\", function() { placeRune(6, \"ulf\")}),\n            r9: document.getElementById(\"ulf-rune9\").addEventListener(\"click\", function() { placeRune(9, \"ulf\")})\n        }\n    },\n    sigrid: {\n        draw: document.getElementById(\"sigrid-button-draw\").addEventListener(\"click\", function() { drawCard(\"Sigrid\") }),\n        bet: document.getElementById(\"sigrid-button-bet\").addEventListener(\"click\", function() { console.log(\"Sigrid bet clicked!\")}),\n        decline: document.getElementById(\"sigrid-button-decline\").addEventListener(\"click\", function() { console.log(\"Sigrid decline clicked!\")}),\n        rune: {\n            r3: document.getElementById(\"sigrid-rune3\").addEventListener(\"click\", function() { placeRune(3, \"sigrid\")}),\n            r4: document.getElementById(\"sigrid-rune4\").addEventListener(\"click\", function() { placeRune(4, \"sigrid\")}),\n            r7: document.getElementById(\"sigrid-rune7\").addEventListener(\"click\", function() { placeRune(7, \"sigrid\")}),\n            // r7: \"You correctly linked to r7!\",\n            r8: document.getElementById(\"sigrid-rune8\").addEventListener(\"click\", function() { placeRune(8, \"sigrid\")}),\n        }\n    }\n};\n\nvikingStockpile = {\n    ulf: {\n        gold: 0,\n        fish: 0,\n        badgold: 0,\n        badfish: 0\n    },\n    sigrid: {\n        gold: 0,\n        fish: 0,\n        badgold: 0,\n        badfish: 0\n    }\n};\n\n\nfunction drawCard(viking) {\n    if (pot.length >= 8) {\n        (function() {\n            console.log(\"The market is full, you have to bet!\");\n            // Add CSS modifiers in the future here!\n        }) ();\n    } else {pot.push(bag[Math.floor(Math.random()*bag.length)]);\n\n    console.log(`${viking} draws card ${(pot.slice(-1).pop())}.`);\n    console.log(`The pot is... ${pot}`);\n    }\n};\n\nfunction placeRune(rune, viking) {\n    if (arena.length < 1) {\n        arena.push({\n            rune: rune,\n            viking: viking\n        });\n\n        console.log(`${rune} has been pushed into the arena...`);\n    } else if (arena.length === 1) {\n        arena.push({\n            rune: rune,\n            viking: viking\n        });\n\n        \n\n        console.log(`${rune} has been pushed into the arena. We are ready to compare!`);\n\n        (function () { \n\n            if (arena[0].rune > arena[1].rune ) {\n                // console.log(\"0 > 1 option triggered\");\n                arena.splice(1, 1);\n                console.log((vikingStockpile[arena[0].viking]));\n\n                for (let i = 0; i < pot.length; i++) {\n                    (vikingStockpile[arena[0].viking])[pot[i]] = 1 + ((vikingStockpile[arena[0].viking])[pot[i]]);\n                };\n                \n                console.log((vikingStockpile[arena[0].viking]));\n            } else if (arena[1].rune > arena[0].rune) {\n                // console.log(\"1 > 0 option triggered\");\n                arena.splice(0, 1);\n                console.log((vikingStockpile[arena[0].viking]));\n                for (let i = 0; i < pot.length; i++) {\n                    (vikingStockpile[arena[0].viking])[pot[i]] = 1 + ((vikingStockpile[arena[0].viking])[pot[i]]);\n                };\n                console.log((vikingStockpile[arena[0].viking]));\n            }\n         })();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ******************************************\n// ******************************************\n// CODE SCRAPYARD\n// ******************************************\n// ******************************************\n\n\nfunction checkBet() {\n    if (arena.length >= 2) {\n        console.log(\"checkBet works\");\n    }\n}\ncheckBet();\n\n// function claimPot(viking, y) {\n//     console.log(`${viking} claims the pot of ${pot}`);\n// }\n\n// calLBet() {\n\n// }\n\n\n\n// later, add passTurn and functionality preventing invalid turns to occur."]}
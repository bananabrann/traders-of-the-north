{"version":3,"sources":["../js/main2.js"],"names":["bag","pot","arena","foo","document","getElementById","userButton","ulf","draw","addEventListener","drawCard","bet","console","log","decline","rune","r2","placeRune","r5","r6","r9","sigrid","r3","r4","r7","r8","vikingStockpile","gold","fish","badgold","badfish","viking","length","push","Math","floor","random","lastInPot","slice","pop","imgGold","createElement","src","id","appendChild","imgFish","imgBadGold","imgBadfish","collectPot","splice","clearPotImages","i","updateStockpile","firstChild","removeChild","ulfGoldStoNum","textContent","ulfFishStoNum","sigridGoldStoNum","sigridFishStoNum","ulfTotalGold","ulfTotalFish","sigridTotalGold","sigridTotalFish"],"mappings":"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","file":"main2.952af7ba.map","sourceRoot":"../src/html","sourcesContent":["const bag = [\"gold\", \"gold\", \"fish\", \"fish\", \"fish\", \"badgold\", \"badfish\", \"badfish\"];\n// *Repeats are not nessesary for randomizer, but repeats are here for tile ratios\nlet pot = [];\nlet arena = [];\n\nconst foo = document.getElementById(\"pot\");\n\nconst userButton = {\n  ulf: {\n    draw: document\n      .getElementById(\"ulf-button-draw\")\n      .addEventListener(\"click\", function() {\n        drawCard(\"Ulf\");\n      }),\n    bet: document\n      .getElementById(\"ulf-button-bet\")\n      .addEventListener(\"click\", function() {\n        console.log(\"Ulf bet clicked!\");\n      }),\n    decline: document\n      .getElementById(\"ulf-button-decline\")\n      .addEventListener(\"click\", function() {\n        console.log(\"Ulf decline clicked!\");\n      }),\n    rune: {\n      r2: document\n        .getElementById(\"ulf-rune2\")\n        .addEventListener(\"click\", function() {\n          placeRune(2, \"ulf\");\n        }),\n      r5: document\n        .getElementById(\"ulf-rune5\")\n        .addEventListener(\"click\", function() {\n          placeRune(5, \"ulf\");\n        }),\n      r6: document\n        .getElementById(\"ulf-rune6\")\n        .addEventListener(\"click\", function() {\n          placeRune(6, \"ulf\");\n        }),\n      r9: document\n        .getElementById(\"ulf-rune9\")\n        .addEventListener(\"click\", function() {\n          placeRune(9, \"ulf\");\n        })\n    }\n  },\n  sigrid: {\n    draw: document\n      .getElementById(\"sigrid-button-draw\")\n      .addEventListener(\"click\", function() {\n        drawCard(\"Sigrid\");\n      }),\n    bet: document\n      .getElementById(\"sigrid-button-bet\")\n      .addEventListener(\"click\", function() {\n        console.log(\"Sigrid bet clicked!\");\n      }),\n    decline: document\n      .getElementById(\"sigrid-button-decline\")\n      .addEventListener(\"click\", function() {\n        console.log(\"Sigrid decline clicked!\");\n      }),\n    rune: {\n      r3: document\n        .getElementById(\"sigrid-rune3\")\n        .addEventListener(\"click\", function() {\n          placeRune(3, \"sigrid\");\n        }),\n      r4: document\n        .getElementById(\"sigrid-rune4\")\n        .addEventListener(\"click\", function() {\n          placeRune(4, \"sigrid\");\n        }),\n      r7: document\n        .getElementById(\"sigrid-rune7\")\n        .addEventListener(\"click\", function() {\n          placeRune(7, \"sigrid\");\n        }),\n      // r7: \"You correctly linked to r7!\",\n      r8: document\n        .getElementById(\"sigrid-rune8\")\n        .addEventListener(\"click\", function() {\n          placeRune(8, \"sigrid\");\n        })\n    }\n  }\n};\n\nconst vikingStockpile = {\n  ulf: {\n    gold: 0,\n    fish: 0,\n    badgold: 0,\n    badfish: 0\n  },\n  sigrid: {\n    gold: 0,\n    fish: 0,\n    badgold: 0,\n    badfish: 0\n  }\n};\n\nfunction drawCard(viking) {\n  if (pot.length >= 8) {\n    (function() {\n      console.log(\"The market is full, you have to bet!\");\n      // Add CSS modifiers in the future here!\n    })();\n  } else {\n    pot.push(bag[Math.floor(Math.random() * bag.length)]);\n\n    let lastInPot = pot.slice(-1).pop();\n\n    if (lastInPot === \"gold\") {\n      (function() {\n            let imgGold = document.createElement(\"img\");\n            imgGold.src = \"/goldtoken.png\";\n            imgGold.id = \"gold-token-picture\";\n            foo.appendChild(imgGold);\n            console.log(\"Gold Token Displayed!\");\n      })();\n\n    } else if (lastInPot === \"fish\") {\n        (function() {\n            let imgFish = document.createElement(\"img\");\n            imgFish.src = \"/fishtoken.png\";\n            imgFish.id = \"fish-token-picture\";\n            foo.appendChild(imgFish);\n            console.log(\"Fish Token Displayed!\");\n        })();\n\n    } else if (lastInPot === \"badgold\") {\n        (function() {\n            let imgBadGold = document.createElement(\"img\");\n            imgBadGold.src = \"/badgoldtoken.png\";\n            imgBadGold.id = \"badgold-token-picture\";\n            foo.appendChild(imgBadGold);\n            console.log(\"Badgold Token Displayed!\");\n        })();\n\n    } else if (lastInPot === \"badfish\") {\n        (function() {\n            let imgBadfish = document.createElement(\"img\");\n            imgBadfish.src = \"/badfishtoken.png\";\n            imgBadfish.id = \"badfish-token-picture\";\n            foo.appendChild(imgBadfish);\n            console.log(\"Badfish Token Displayed!\");\n        })();\n    };\n\n    console.log(`${viking} draws card ${lastInPot}.`);\n    console.log(`The pot is... ${pot}`);\n  }\n};\n\n\n\nfunction placeRune(rune, viking) {\n  if (arena.length < 1) {\n    arena.push({\n      rune: rune,\n      viking: viking\n    });\n\n    console.log(`${rune} has been pushed into the arena...`);\n  } else if (arena.length === 1) {\n    arena.push({\n      rune: rune,\n      viking: viking\n    });\n    \n    collectPot();\n\n    arena.splice(0, 1);\n    console.log(arena);\n    console.log(\"Arena cleared!\");\n    // Pot clear\n    pot.splice(0, 8);\n    console.log(pot);\n    console.log(\"Pot cleared!\");\n\n    clearPotImages();\n\n    console.log(\"Rune comparrison complete and arena and pot successfully cleared.\");\n  }\n};\n\nfunction collectPot() {\n    if (arena[0].rune > arena[1].rune) {\n      // console.log(\"0 > 1 option triggered\");\n      arena.splice(1, 1);\n      console.log(`${arena[0].viking} won! His/her stockpile changes are...`);\n      console.log(vikingStockpile[arena[0].viking]);\n  \n      for (let i = 0; i < pot.length; i++) {\n        vikingStockpile[arena[0].viking][pot[i]] =\n          1 + vikingStockpile[arena[0].viking][pot[i]];\n      }\n      console.log(vikingStockpile[arena[0].viking]);\n  \n    } else if (arena[1].rune > arena[0].rune) {\n      // console.log(\"1 > 0 option triggered\");\n      arena.splice(0, 1);\n      console.log(`${arena[0].viking} won! His/her stockpile changes are...`);\n      console.log(vikingStockpile[arena[0].viking]);\n      for (let i = 0; i < pot.length; i++) {\n        vikingStockpile[arena[0].viking][pot[i]] =\n          1 + vikingStockpile[arena[0].viking][pot[i]];\n      }\n      console.log(vikingStockpile[arena[0].viking]);\n    }\n    // adjustResources();\n    updateStockpile();\n}\n\nfunction clearPotImages() {\n    while (foo.firstChild) {\n        foo.removeChild(foo.firstChild);\n        console.log(\"removing...\");\n    };\n}\n\nconst ulfGoldStoNum = document.getElementById(\"ulf-gold-stockpile-number\").textContent;\nconst ulfFishStoNum = document.getElementById(\"ulf-fish-stockpile-number\").textContent;\nconst sigridGoldStoNum = document.getElementById(\"sigrid-gold-stockpile-number\").textContent;\nconst sigridFishStoNum = document.getElementById(\"sigrid-fish-stockpile-number\").textContent;\n\nconsole.log(\"Hello!\");\nconsole.log(ulfGoldStoNum);\nconsole.log(ulfFishStoNum)\nconsole.log(sigridGoldStoNum)\nconsole.log(sigridFishStoNum)\n\n\nfunction updateStockpile() {\n    // Keep these variables within the function, because of function run-path \n\n    let ulfTotalGold = (vikingStockpile.ulf.gold - ((vikingStockpile.ulf.badgold) * 2));\n    let ulfTotalFish = vikingStockpile.ulf.fish - (vikingStockpile.ulf.badfish * 2);\n    let sigridTotalGold = vikingStockpile.sigrid.gold - (vikingStockpile.sigrid.badgold * 2);\n    let sigridTotalFish = vikingStockpile.sigrid.fish - (vikingStockpile.sigrid.badfish * 2);\n\n    console.log(`Ulf's TotalGold is ${ulfTotalGold}`)\n    \n\n\n\n\n\n\n\n    // This is for dynamic pictures within the stockpile area at bottom\n\n    // if (ulfTotalGold >= 0) {\n    //     // console.log(\">= 0 is triggered\")\n    //     let i = document.getElementById(\"gold-\")\n    //     for (let i = 0; i < ulfTotalGold; i++) {\n    //         // add pictures accordingly\n    //         let imgStoGold = document.createElement(\"img\");\n    //         imgStoGold.src = \"/goldtoken.png\";\n    //         imgStoGold.id = \"gold-stockpile-token-picture\";\n    //         ulfGoldStoArea.appendChild(imgStoGold);\n    //         console.log(\"Added one to Ulf's stockpile!\");\n    //     }\n    // } else if (ulfTotalGold < 0) {\n    //     console.log(\"< 0 is triggered\")\n    //         for (let i = 0; i > ulfTotalGold; i--) {\n    //             ulfGoldStoArea.removeChild(ulfGoldStoArea.firstChild);\n    //             vikingStockpile.ulf.badgold = 0;\n    //         }\n    //     //     console.log(\"Took one from Ulf's stockpile!\");\n\n    // }\n}\n\n\n\n\n\n\n\n// ******************************************\n// ******************************************\n// CODE SCRAPYARD\n// ******************************************\n// ******************************************\n// function zeroResources() {\n\n//     if (ulfTotalGold < 0) {\n//         ulfTotalGold = 0;\n//         console.log(`ulf's gold has dropped below 0!`)\n//     };\n//     if (ulfFish < 0) {\n//         ulfFish = 0;\n//         console.log(`ulf's fish ahs dropped below 0!`);\n//     }\n//     if (sigridGold < 0) {\n//         sigridGold = 0;\n//     }\n//     if (sigridFish < 0) {\n//         sigridFish = 0;\n//     }\n//     console.log(`Ulf's gold/fish: ${ulfGold + ulfFish}`);\n\n//     console.log(`Sigrids gold/fish: ${sigridGold + sigridFish}`);\n\n// }\n\n// calLBet() {\n\n// }\n\n// later, add passTurn and functionality preventing invalid turns to occur.\n"]}
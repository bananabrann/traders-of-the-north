{"version":3,"sources":["../js/main2.js"],"names":["bag","pot","arena","foo","document","getElementById","ulfGoldStoNum","ulfFishStoNum","sigridGoldStoNum","sigridFishStoNum","gameMessage","ulfRunesPlayed","sigridRunesPlayed","ulfFinalScore","sigridFinalScore","userButton","ulf","draw","addEventListener","drawCard","bet","console","log","decline","declineBet","rune","r2","placeRune","r5","r6","r9","sigrid","r3","r4","r7","r8","vikingStockpile","gold","fish","badgold","badfish","viking","length","innerHTML","push","Math","floor","random","lastInPot","slice","pop","imgGold","createElement","src","id","appendChild","imgFish","imgBadGold","imgBadfish","style","transform","collectPot","splice","checkVictory","display","i","clearPotImages","updateStockpile","firstChild","removeChild","ulfTotalGold","ulfTotalFish","sigridTotalGold","sigridTotalFish","textContent","winningViking"],"mappings":"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","file":"main2.c99bf075.map","sourceRoot":"../src/html","sourcesContent":["const bag = [\n    \"gold\",\n    \"gold\",\n    \"gold\",\n    \"fish\",\n    \"fish\",\n    \"fish\",\n    \"fish\",\n    \"fish\",\n    \"badgold\",\n    \"badfish\"\n  ];\n  // *Repeats are not nessesary for randomizer, but repeats are here for tile ratios\n  \n  let pot = [];\n  let arena = [];\n  \n  const foo = document.getElementById(\"pot\");\n  const ulfGoldStoNum = document.getElementById(\"ulf-gold-stockpile-number\");\n  const ulfFishStoNum = document.getElementById(\"ulf-fish-stockpile-number\");\n  const sigridGoldStoNum = document.getElementById(\"sigrid-gold-stockpile-number\");\n  const sigridFishStoNum = document.getElementById(\"sigrid-fish-stockpile-number\");\n  \n  let gameMessage = document.getElementById(\"message-board-content\");\n  \n  let ulfRunesPlayed = 0;\n  let sigridRunesPlayed = 0;\n  \n  let ulfFinalScore = 0;\n  let sigridFinalScore = 0;\n  \n  const userButton = {\n    ulf: {\n      draw: document\n        .getElementById(\"ulf-button-draw\")\n        .addEventListener(\"click\", function() {\n          drawCard(\"Ulf\");\n        }),\n      bet: document\n        .getElementById(\"ulf-button-bet\")\n        .addEventListener(\"click\", function() {\n          console.log(\"Ulf bet clicked!\");\n        }),\n      decline: document\n        .getElementById(\"ulf-button-decline\")\n        .addEventListener(\"click\", function() {declineBet(\"ulf\")}),\n      rune: {\n        r2: document\n          .getElementById(\"ulf-rune2\")\n          .addEventListener(\"click\", function() {\n            placeRune(2, \"ulf\");\n          }),\n        r5: document\n          .getElementById(\"ulf-rune5\")\n          .addEventListener(\"click\", function() {\n            placeRune(5, \"ulf\");\n          }),\n        r6: document\n          .getElementById(\"ulf-rune6\")\n          .addEventListener(\"click\", function() {\n            placeRune(6, \"ulf\");\n          }),\n        r9: document\n          .getElementById(\"ulf-rune9\")\n          .addEventListener(\"click\", function() {\n            placeRune(9, \"ulf\");\n          })\n      }\n    },\n    sigrid: {\n      draw: document\n        .getElementById(\"sigrid-button-draw\")\n        .addEventListener(\"click\", function() {\n          drawCard(\"Sigrid\");\n        }),\n      bet: document\n        .getElementById(\"sigrid-button-bet\")\n        .addEventListener(\"click\", function() {\n          console.log(\"Sigrid bet clicked!\");\n        }),\n      decline: document\n        .getElementById(\"sigrid-button-decline\")\n        .addEventListener(\"click\", function() {declineBet(\"sigrid\")}),\n      rune: {\n        r3: document\n          .getElementById(\"sigrid-rune3\")\n          .addEventListener(\"click\", function() {\n            placeRune(3, \"sigrid\");\n          }),\n        r4: document\n          .getElementById(\"sigrid-rune4\")\n          .addEventListener(\"click\", function() {\n            placeRune(4, \"sigrid\");\n          }),\n        r7: document\n          .getElementById(\"sigrid-rune7\")\n          .addEventListener(\"click\", function() {\n            placeRune(7, \"sigrid\");\n          }),\n        // r7: \"You correctly linked to r7!\",\n        r8: document\n          .getElementById(\"sigrid-rune8\")\n          .addEventListener(\"click\", function() {\n            placeRune(8, \"sigrid\");\n          })\n      }\n    }\n  };\n  \n  let vikingStockpile = {\n    ulf: {\n      gold: 0,\n      fish: 0,\n      badgold: 0,\n      badfish: 0\n    },\n    sigrid: {\n      gold: 0,\n      fish: 0,\n      badgold: 0,\n      badfish: 0\n    }\n  };\n  \n  function drawCard(viking) {\n    if (pot.length >= 8) {\n      (function() {\n        gameMessage.innerHTML = `The market is full and the Boatsmen can't unload any more. YOU must bid!`;\n        console.log(\"The market is full, you have to bet!\");\n        // Add CSS modifiers in the future here!\n      })();\n    } else {\n      pot.push(bag[Math.floor(Math.random() * bag.length)]);\n  \n      let lastInPot = pot.slice(-1).pop();\n      gameMessage.innerHTML = `${lastInPot} is unloaded from the Longboat.`;\n    \n      if (lastInPot === \"gold\") {\n        (function() {\n          let imgGold = document.createElement(\"img\");\n          imgGold.src = \"/goldtoken.png\";\n          imgGold.id = \"gold-token-picture\";\n          foo.appendChild(imgGold);\n          // console.log(\"Gold Token Displayed!\");\n        })();\n      } else if (lastInPot === \"fish\") {\n        (function() {\n          let imgFish = document.createElement(\"img\");\n          imgFish.src = \"/fishtoken.png\";\n          imgFish.id = \"fish-token-picture\";\n          foo.appendChild(imgFish);\n          // console.log(\"Fish Token Displayed!\");\n        })();\n      } else if (lastInPot === \"badgold\") {\n        (function() {\n          let imgBadGold = document.createElement(\"img\");\n          imgBadGold.src = \"/badgoldtoken.png\";\n          imgBadGold.id = \"badgold-token-picture\";\n          foo.appendChild(imgBadGold);\n          // console.log(\"Badgold Token Displayed!\");\n        })();\n      } else if (lastInPot === \"badfish\") {\n        (function() {\n          let imgBadfish = document.createElement(\"img\");\n          imgBadfish.src = \"/badfishtoken.png\";\n          imgBadfish.id = \"badfish-token-picture\";\n          foo.appendChild(imgBadfish);\n          // console.log(\"Badfish Token Displayed!\");\n        })();\n      }\n      // console.log(`${viking} draws card ${lastInPot}.`);\n      // console.log(`The pot is... ${pot}`);\n    }\n  //   console.log(\"drawCard complete!\");\n  };\n  \n  function placeRune(rune, viking) {\n      \n      console.log(document.getElementById(viking + \"-rune\" + rune));\n  \n  \n    if (arena.length < 1) {\n      document.getElementById(viking + \"-rune\" + rune).style.transform = \"translateY(-30px)\";\n  \n  \n      arena.push({\n        rune: rune,\n        viking: viking\n      });\n      gameMessage.innerHTML = `${arena[0].viking} has placed a ${arena[0].rune} Rune`;\n      console.log(`${rune} has been pushed into the arena...`);\n      // console.log(\"placeRune(rune,viking) complete!\");\n    } else if (arena.length === 1) {\n      arena.push({\n        rune: rune,\n        viking: viking\n      });\n      \n      collectPot();\n  \n      arena.splice(0, 1);\n      pot.splice(0, 8);\n  \n      // console.log(\"placeRune(rune,viking) complete!\");\n  \n      // Simple, temp victory condition for GA presentation:\n      if (ulfRunesPlayed >= 4 && sigridRunesPlayed >= 4) {\n        checkVictory();\n      }\n    }\n  //   console.log(`Ulf's final score is ${ulfFinalScore}`);\n  //   console.log(`Ulf's final score is ${sigridFinalScore}`);\n  };\n  \n  function collectPot() {\n    // Send the pot into the object of the winning viking:\n    if (arena[0].rune > arena[1].rune) {\n      //   console.log(`${arena[0].viking} won! His/her stockpile changes are...`);\n      //   console.log(vikingStockpile[arena[0].viking]);\n      gameMessage.innerHTML = `${arena[1].viking} placed a ${arena[1].rune} Rune. ${arena[0].viking} won! An empty market awaits the eager boatsmen.`;\n  \n      arena.splice(1, 1);\n      document.getElementById(arena[0].viking + \"-\" + \"rune\" + arena[0].rune).style.display = \"none\";\n      if (arena[0].viking === \"ulf\") {\n        ulfRunesPlayed++;\n      }\n      if (arena[0].viking === \"sigrid\") {\n        sigridRunesPlayed++;\n      }\n  \n      for (let i = 0; i < pot.length; i++) {\n        vikingStockpile[arena[0].viking][pot[i]] =\n          1 + vikingStockpile[arena[0].viking][pot[i]];\n      }\n      //   console.log(vikingStockpile[arena[0].viking]);\n    } else if (arena[1].rune > arena[0].rune) {\n      //   console.log(`${arena[0].viking} won! His/her stockpile changes are...`);\n      //   console.log(vikingStockpile[arena[0].viking]);\n  \n      document.getElementById(arena[0].viking + \"-rune\" + arena[0].rune).style.transform = \"none\";\n      gameMessage.innerHTML = `${arena[1].viking} has placed a ${arena[1].rune} Rune. ${arena[1].viking} won! An empty market looks appetizing to the boatsmen.`;\n\n      console.log(`The rune in question is..`);\n      console.log(arena[0].viking + \"-rune\" + arena[0].rune )\n  \n      arena.splice(0, 1);\n      document.getElementById(arena[0].viking + \"-\" + \"rune\" + arena[0].rune).style.display = \"none\";\n  \n      if (arena[0].viking === \"ulf\") {\n        ulfRunesPlayed++;\n      }\n      if (arena[0].viking === \"sigrid\") {\n        sigridRunesPlayed++;\n      }\n      for (let i = 0; i < pot.length; i++) {\n        vikingStockpile[arena[0].viking][pot[i]] =\n          1 + vikingStockpile[arena[0].viking][pot[i]];\n      }\n      console.log(vikingStockpile[arena[0].viking]);\n    }\n    console.log(\"collectPot() complete!\");\n  \n    clearPotImages();\n  \n    updateStockpile();\n  };\n  \n  function clearPotImages() {\n    while (foo.firstChild) {\n      foo.removeChild(foo.firstChild);\n      console.log(\"removing...\");\n    }\n    console.log(\"clearPotImages complete!\");\n  };\n  \n  function updateStockpile() {\n    // Why does .textContent log the correct number, but does not allow updateStockpile() to overwrite it?\n    // Keep these variables within the function, because of function run-path when drawCard is called\n    let ulfTotalGold = vikingStockpile.ulf.gold - vikingStockpile.ulf.badgold * 2;\n    let ulfTotalFish = vikingStockpile.ulf.fish - vikingStockpile.ulf.badfish * 2;\n    let sigridTotalGold = vikingStockpile.sigrid.gold - vikingStockpile.sigrid.badgold * 2;\n    let sigridTotalFish = vikingStockpile.sigrid.fish - vikingStockpile.sigrid.badfish * 2;\n  \n    if (ulfTotalGold <= 0) {\n      ulfTotalGold = 0;\n      vikingStockpile.ulf.gold = 0;\n      vikingStockpile.ulf.badgold = 0;\n    }\n    if (ulfTotalFish <= 0) {\n      ulfTotalFish = 0;\n      vikingStockpile.ulf.fish = 0;\n      vikingStockpile.ulf.badfish = 0;\n    }\n    if (sigridTotalGold <= 0) {\n      sigridTotalGold = 0;\n      vikingStockpile.sigrid.gold = 0;\n      vikingStockpile.sigrid.badgold = 0;\n    }\n    if (sigridTotalFish <= 0) {\n      sigridTotalFish = 0;\n      vikingStockpile.sigrid.fish = 0;\n      vikingStockpile.sigrid.badfish = 0;\n    }\n  \n    (function() {\n      // ulfGoldStoNum.innerHTML(ulfTotalGold);\n      ulfGoldStoNum.innerHTML = ulfTotalGold;\n      ulfFishStoNum.innerHTML = ulfTotalFish;\n      sigridGoldStoNum.innerHTML = sigridTotalGold;\n      sigridFishStoNum.innerHTML = sigridTotalFish;\n    })();\n  \n    // var p = document.createElement('p')\n  \n    // var counter=0;\n    // var q1=prompt(\"what's your name?\");\n  \n    // if (q1==='akash'){\n    //   counter=counter+1;\n    //   //Update content of p element you created\n    //   p.innerHTML = 'yay right: ' + counter + '/ 5'\n    // }\n  \n    // This is for dynamic pictures within the stockpile area at bottom\n  \n    // if (ulfTotalGold >= 0) {\n    //     // console.log(\">= 0 is triggered\")\n    //     let i = document.getElementById(\"gold-\")\n    //     for (let i = 0; i < ulfTotalGold; i++) {\n    //         // add pictures accordingly\n    //         let imgStoGold = document.createElement(\"img\");\n    //         imgStoGold.src = \"/goldtoken.png\";\n    //         imgStoGold.id = \"gold-stockpile-token-picture\";\n    //         ulfGoldStoArea.appendChild(imgStoGold);\n    //         console.log(\"Added one to Ulf's stockpile!\");\n    //     }\n    // } else if (ulfTotalGold < 0) {\n    //     console.log(\"< 0 is triggered\")\n    //         for (let i = 0; i > ulfTotalGold; i--) {\n    //             ulfGoldStoArea.removeChild(ulfGoldStoArea.firstChild);\n    //             vikingStockpile.ulf.badgold = 0;\n    //         }\n    //     //     console.log(\"Took one from Ulf's stockpile!\");\n    // }\n    console.log(\"updateStockpile() complete!\");\n  };\n  \n  function checkVictory() {\n    if (ulfFishStoNum.textContent > sigridFishStoNum.textContent) {\n      ulfFinalScore += 6;\n      console.log(\"Ulf has the most fish! Added 6 to total.\");\n    } else if (sigridFishStoNum.textContent > ulfFishStoNum.textContent) {\n      sigridFinalScore += 6;\n      console.log(\"Sigrid has the most fish! Adding 6 to total.\");\n    }\n  \n    for (let i = 0; i < ulfGoldStoNum.textContent; i++) {\n      ulfFinalScore++;\n      console.log(\"Gold added to Ulf's total.\")\n    }\n    for (let i = 0; i < sigridGoldStoNum.textContent; i++) {\n      sigridFinalScore++;\n      console.log(\"Gold added to Sigrid total.\")\n  \n    }\n    let winningViking = \"\";\n    if (ulfFinalScore > sigridFinalScore) {\n        winningViking = \"Ulf\";\n    } else if (sigridFinalScore > ulfFinalScore) {\n        winningViking = \"Sigrid\";\n    }\n    gameMessage.innerHTML = `The Day Is Over! Ulf's Honor is ${ulfFinalScore}. Sigrid's Honor is ${sigridFinalScore}. The most talked about viking at the LongHouse tonight is ${winningViking}`;\n    // Make message board display viking has won message\n  };\n  \n  \n  function declineBet(viking, ) {\n    placeRune(0, viking);\n  }\n  \n  \n  \n  // ******************************************\n  // ******************************************\n  // CODE SCRAPYARD\n  // ******************************************\n  // ******************************************\n  \n  // calLBet() {\n  \n  // }\n  \n  // later, add passTurn and functionality preventing invalid turns to occur."]}